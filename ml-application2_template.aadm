module: username

import: docker
import: openstack

description: "ML Application deployment over OpenStack cloud"

inputs:
  ssh-key-name:  
    type: string 
  vm-name:  
    type: string 
  image-name:  
    type: string 
  openstack-network-name:  
    type: string 
  openstack-floating-ip-pool:  
    type: string 
  security-group-name:  
    type: string  
  flavor-name:  
    type: string
  env:
    type: map 
  username:
    type: string  

node_templates:

  // Setting up OpenStack resources //

  // OpenStack security group for the ML Application
  ml-app-security-group:
    type: openstack/sodalite.nodes.OpenStack.SecurityRules
    properties:
      group_description: "Security group for ML App: includes ports for SSH, Training DB, Training and Prediction services"
      group_name: get_input: security-group-name
      env: get_input: env
      ports:
        ssh-port:
          protocol: "tcp"
          port_range_min: 22
          port_range_max: 22
          remote_ip_prefix: "0.0.0.0/0"
        training-db-service-port:
          protocol: "tcp"
          port_range_min: 5000
          port_range_max: 5000
          remote_ip_prefix: "0.0.0.0/0"
        training-service-port:
          protocol: "tcp"
          port_range_min: 5001
          port_range_max: 5001
          remote_ip_prefix: "0.0.0.0/0"
        prediction-service-port:
          protocol: "tcp"
          port_range_min: 5002
          port_range_max: 5002
          remote_ip_prefix: "0.0.0.0/0"  

  // OpenStack VM
  sodalite-vm:  
    type: openstack/sodalite.nodes.OpenStack.VM 
    properties:  
      name: get_input: vm-name
      key_name: get_input: ssh-key-name
      image: get_input: image-name
      network: get_input: openstack-network-name
      security_groups: get_input: security-group-name
      flavor: get_input: flavor-name
      username: get_input: username
      floating_ip_pools: get_input: openstack-floating-ip-pool
      env: get_input: env
      timeout: 600
    requirements:
      protected_by:
        node: ml-app-security-group

  // Setting up Docker environment on the OpenStack VM //

  // Docker host
  docker-host:
    type: docker/sodalite.nodes.DockerHost
    requirements:
      host:
        node: sodalite-vm

  // Docker network
  docker-network:
    type: docker/sodalite.nodes.DockerNetwork
    properties:
      name: "ml-app-docker-network"
    requirements:
      host:
        node: sodalite-vm
      dependency:
        node: docker-host

  // Docker images shall be pulled from public registry
  docker-public-registry:
    type: docker/sodalite.nodes.DockerRegistry
    properties:
      docker_registry_url: "registry.hub.docker.com"
      docker_user: ""
      docker_pass: ""
    requirements:
      host:
        node: sodalite-vm
      dependency:
        node: docker-host

  // Deploying components of the ML application //
  // Create your ML application service nodes HERE


  // Volume for Training and Prediction services 
  model-repo-volume:
    type: docker/sodalite.nodes.DockerVolume
    properties:
      name: "model-repo"
    requirements:
      host:
        node: sodalite-vm
      dependency:
        node: docker-host


// Obtaining useful outputs, such as public IP of the VM //

outputs:

  // Public IP can be retrieved
  // from the public_address attribute of the OpenStack VM
  public_ip:
    type: string
    description: "The public IP of the provisioned VM"
    value: get_attribute: 
      entity: sodalite-vm
      attribute: sodalite-vm.public_address